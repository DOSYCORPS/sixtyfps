/* LICENSE BEGIN
    This file is part of the SixtyFPS Project -- https://sixtyfps.io
    Copyright (c) 2020 Olivier Goffart <olivier.goffart@sixtyfps.io>
    Copyright (c) 2020 Simon Hausmann <simon.hausmann@sixtyfps.io>

    SPDX-License-Identifier: GPL-3.0-only
    This file is also available under commercial licensing terms.
    Please contact info@sixtyfps.io for more information.
LICENSE END */

global MyGlobal := {
    property<int> bar: 5;
    property<int> foo: 3;
    signal glob_signal;
}

Foo := Rectangle {
    property<int> foo_prop: MyGlobal.foo;
    for ha in 3: Rectangle {
        x: (ha + MyGlobal.bar) * 1px;
    }
}

TestCase := Rectangle {

    signal emit_glob;
    emit_glob => {
        MyGlobal.glob_signal();
    }
    Foo {}
    foo := Foo {}
    Foo {}
    property<int> p1: 10 * MyGlobal.bar + 1;
    property<int> p2: foo.foo_prop;

}
/*
```cpp
TestCase instance;
assert_eq(instance.get_p1(), 51);
assert_eq(instance.get_p2(), 3);
```

```rust
let instance = TestCase::new();
let instance = instance.as_ref();
assert_eq!(instance.get_p1(), 51);
assert_eq!(instance.get_p2(), 3);
```

```js
var instance = new sixtyfps.TestCase({});
assert.equal(instance.p1, 51);
assert.equal(instance.p2, 3);
```
*/
